<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on 3702</title><link>https://zole.life/tags/android/</link><description>Recent content in Android on 3702</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Aug 2022 15:16:47 +0800</lastBuildDate><atom:link href="https://zole.life/tags/android/index.xml" rel="self" type="application/rss+xml"/><item><title>JavaScript in Android</title><link>https://zole.life/p/javascript-in-android/</link><pubDate>Sun, 14 Aug 2022 15:16:47 +0800</pubDate><guid>https://zole.life/p/javascript-in-android/</guid><description>通过JavaScript解析蓝牙指令及蓝牙返回数据 Raw指令存储格式 将ByteArray转换成HexString，根据指令类型及指令名称生成JSONObject。 服务器以JSON格式保存蓝牙指令。
{ &amp;#34;cmdType&amp;#34;: { &amp;#34;cmdName&amp;#34;: &amp;#34;HexString(蓝牙指令)&amp;#34; } } ByteArray 与 HexString互相转换 // Convert a hex string to a byte array function hexToBytes(hex) { for (var bytes = [], c = 0; c &amp;lt; hex.length; c += 2) bytes.push(parseInt(hex.substr(c, 2), 16)); return bytes; } // Convert a byte array to a hex string function bytesToHex(bytes) { for (var hex = [], i = 0; i &amp;lt; bytes.length; i++) { var current = bytes[i] &amp;lt; 0 ?</description></item><item><title>Android Architecture Components 计划</title><link>https://zole.life/p/android-architecture-components-%E8%AE%A1%E5%88%92/</link><pubDate>Fri, 14 Sep 2018 11:31:55 +0000</pubDate><guid>https://zole.life/p/android-architecture-components-%E8%AE%A1%E5%88%92/</guid><description>计划了解的内容 Data Binding Room Persistence ViewModel Handling Lifecycles LiveData Navigation Paging</description></item><item><title>Android应用内下载并更新APK</title><link>https://zole.life/p/android%E5%BA%94%E7%94%A8%E5%86%85%E4%B8%8B%E8%BD%BD%E5%B9%B6%E6%9B%B4%E6%96%B0apk/</link><pubDate>Sat, 19 May 2018 10:07:55 +0000</pubDate><guid>https://zole.life/p/android%E5%BA%94%E7%94%A8%E5%86%85%E4%B8%8B%E8%BD%BD%E5%B9%B6%E6%9B%B4%E6%96%B0apk/</guid><description>&lt;h1 id="背景">背景&lt;/h1>
&lt;p>公司的APP之前一直是放在公司服务器，没有发布到应用市场，每次发布新版本用户更新都很麻烦。前段时间抽时间写了个应用内下载APK并更新的模块。
整个模块主要的几个类:&lt;/p>
&lt;ul>
&lt;li>UpgradeManager&lt;/li>
&lt;li>UpgradeService&lt;/li>
&lt;li>FileResponseBody&lt;/li>
&lt;li>ResponseInterceptor&lt;/li>
&lt;/ul>
&lt;p>网络请求使用的是Retrofit2+Rxjava2&lt;/p></description></item></channel></rss>